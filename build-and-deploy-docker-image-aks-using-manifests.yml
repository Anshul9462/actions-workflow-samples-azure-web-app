on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: my-registry-name
  REGISTRY_USERNAME: my-registry-username
  CLUSTER_NAME: my-cluster-name
  CLUSTER_RESOURCE_GROUP: my-cluster-resource-group
  NAMESPACE: default
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: $REGISTRY_NAME.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t $REGISTRY_NAME.azurecr.io.azurecr.io/myimage:${{ github.sha }}
        docker push $REGISTRY_NAME.azurecr.io.azurecr.io/myimage:${{ github.sha }}
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: $CLUSTER_NAME
        resource-group: $CLUSTER_RESOURCE_GROUP
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace $NAMESPACE --dry-run -o json | kubectl apply -f -
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: $REGISTRY_NAME.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: $REGISTRY_NAME-registry-connection
        namespace: $NAMESPACE
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          $REGISTRY_NAME.azurecr.io/k8sdemo:${{ github.sha }}
        imagepullsecrets: |
          $REGISTRY_NAME-registry-connection
        namespace: $NAMESPACE
